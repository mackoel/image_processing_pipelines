from cvlib import *
from files_manager import File, save_file

input_A = File(r'C:\Eyedisks\M1\.tif')

output_A = r'C:\Eyedisks\M1\_lum.tif'
output_B = r'C:\Eyedisks\M1\_mask.tif'
output_C = r'C:\Eyedisks\M1\_list.txt'
output_D = r'C:\Eyedisks\M1\_mark.tif'
output_E = r'C:\Eyedisks\M1\_tab.csv'
output_F = r'C:\Eyedisks\M1\_movl.tif'

A = strel(window_height=7, window_width=7, shape=ShapeEnum.DISK)
B = strel(window_height=7, window_width=7, shape=ShapeEnum.DISK)
C = strel(window_height=3, window_width=3, shape=ShapeEnum.SQUARE)
D = strel(window_height=5, window_width=5, shape=ShapeEnum.DISK)
E = convert(input_A, channel='R')
F = ContrastTransfer(E[1], level_min=0.0, level_max=0.9, left_offset=0.1, right_offset=0.05, slope_ax=1.0, intercept_bx=1, transfer_func=ContrasttransferTransfer_funcEnum.INVLOG)
G = heq(E[1])
save_file(F[1], output_A)
H = invert(G[1])
I = lhbg(G[1] + B[1])
J = hystthresh(H[1], low_threshold=120.0, high_threshold=130.0, segment=100, connectivity=ConnectivityEnum.FOUR)
K = invert(I[1])
L = threshold(K[1], threshold_level=200.0, method=ThresholdMethodEnum.PLAIN, process='-r 1')
M = mcrop(L[1], upper_offset=0, lower_offset=0, left_offset=100, right_offset=100)
N = mpad(M[1], upper_offset=0, lower_offset=0, left_offset=100, right_offset=100)
O = vaff(L[1] + N[1], coeff_1=1, coeff_2=-1, coeff_3=0.0)
P = mcrop(O[1], upper_offset=100, lower_offset=100, left_offset=0, right_offset=0)
Q = mpad(P[1], upper_offset=100, lower_offset=100, left_offset=0, right_offset=0)
R = vaff(O[1] + Q[1], coeff_1=1, coeff_2=-1, coeff_3=0.0)
S = reconstruct(J[1] + R[1], connectivity=ConnectivityEnum.FOUR)
T = vaff(J[1] + S[1], coeff_1=1, coeff_2=-1, coeff_3=0.0)
U = correlate(T[1], radius=-1, sigma=4.0)
V = median(U[1] + B[1], repetitions=1)
W = gerosion(V[1] + B[1], repetitions=1)
X = reconstruct(V[1] + W[1], connectivity=ConnectivityEnum.FOUR)
Y = mul(X[1] + X[1])
Z = hystthresh(Y[1], low_threshold=15.0, high_threshold=75.0, segment=100, connectivity=ConnectivityEnum.EIGHT)
BA = gclose(Z[1] + A[1], repetitions=1)
BB = qu3dinit(BA[1] + BA[1], connectivity=Connectivity3dEnum.TWENTY_SIX, tag='channel1')
BC = qu3dtrans(BB[1] + BB[1], shape_section='Shape:0', center='0', percent='0', min_volume=500, max_volume=20000)
BD = qumap3d(BA[1] + BC[1], connectivity=Connectivity3dEnum.TWENTY_SIX, channel='channel1', index=3)
BE = chole(BD[1] + A[1])
BF = vmax(BE[1] + BD[1])
BG = gdilation(BF[1] + A[1], repetitions=2)
BH = quthicken(BF[1], connectivity=Connectivity3dEnum.TWENTY_SIX, iterations=4)
BI = threshold(BH[1], threshold_level=1, method=ThresholdMethodEnum.PLAIN, process='-r 1')
BJ = mul(BI[1] + BG[1])
BK = median(BJ[1] + D[1], repetitions=1)
save_file(BK[1], output_B)
BL = gerosion(BK[1] + C[1], repetitions=1)
BM = qumark3d(BK[1], connectivity=Connectivity3dEnum.SIX)
BN = qu3dinit(F[1] + BK[1], connectivity=Connectivity3dEnum.TWENTY_SIX, tag='channel1')
BO = vaff(BK[1] + BL[1], coeff_1=1.0, coeff_2=-1.0, coeff_3=0.0)
BP = gdilation(BM[1] + A[1], repetitions=1)
BQ = qu3d2csv(BN[1])
save_file(BN[1], output_C)
BR = movl2(F[1] + BO[1], color_1=ColorsEnum.WHITE, color_2=ColorsEnum.YELLOW)
save_file(BP[1], output_D)
save_file(BQ[1], output_E)
BS = impute_text(BR[1] + BQ[1], colorrgbtriple='255-0-0', fontscale=1.0, fontthicknes=2)
save_file(BS[1], output_F)
